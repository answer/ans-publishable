= ans publisher

同時に実行しても重複しないコレクションを取得するメソッドを提供する

 class Article < ActiveRecord::Base
   extend Ans::Publisher::Methods
 end
 
 Article.publish({scope_params: args}).each do |article|
   # article に対して重複しない処理を記述
 end

1. 一意な publish_id を生成
2. コレクションに publish_id を設定
3. publish_id が設定されたコレクションを返す


== 機能

以下の public メソッドを提供する

=== publish(hash)

Article.publishable(hash) で返されるコレクションに ArticlePublish.id を設定

作成した ArticlePublish インスタンスから has_many アソシエーションを通してコレクションを返す


== 規約

Article の publishable を取得するなら、

* Article.publishable(hash) が定義されていること
* ArticlePublish で publish_id を振り出すこと
* Article.article_publish_id に ArticlePublish.id を持つこと
* ArticlePublish.articles で、 ArticlePublish.id をもつ Article が参照できること


== オーバーライド

* publishable_scope でメソッド名を返すことで、 publishable 以外のスコープを使用可能
* publish_model でモデルクラスを返すことで、 ArticlePublish 以外のモデルを使用可能
* publish_foreign_key でカラム名を返すことで、 article_publish_id 以外のカラムを使用可能
* publish_primary_key でカラム名を返すことで、 ArticlePublish.id 以外のカラムを使用可能

